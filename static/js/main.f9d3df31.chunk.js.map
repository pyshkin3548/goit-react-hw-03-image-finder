{"version":3,"sources":["components/Spinner.js","components/Notification.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Searchbar.js","components/Button.js","components/Modal.js","services/imageApi.js","components/App.js","index.js"],"names":["Spinner","message","className","type","color","height","width","Notification","ImageGalleryItem","url","alt","openModal","modalImage","onClick","src","ImageGallery","hits","map","el","webformatURL","tags","largeImageURL","id","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","onChange","autoComplete","autoFocus","placeholder","Component","Button","fetchArticles","Modal","closeModal","apiKey","searchQuery","page","axios","get","then","responce","data","App","loading","error","isModalOpen","window","addEventListener","evt","currentTarget","keyCode","removeEventListener","scroll","scrollTo","top","document","documentElement","scrollHeight","behavior","imageApi","prevState","catch","finally","handleSearchFormSubmit","query","prevProps","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.f9d3df31.chunk.js","sourcesContent":["import React from \"react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport '../styles.css'\n\nexport default function Spinner({ message }) {\n  // return <p>{message}</p>;\n  return <Loader className=\"Spinner\" type=\"TailSpin\" color=\"#3f51b5\" height={600} width={600} />;\n}\n","import React from \"react\";\n\nexport default function Notification({message}) {\n  return <div>{message}</div>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// const ImageGalleryItem = ({ hits, openModal }) => {\nconst ImageGalleryItem = ({ url, alt, openModal, modalImage }) => {\n  return (\n    <>\n      {/* {hits.map(({ id, webformatURL, largeImageURL, openModal, modalImage }) => (\n        <li\n          className=\"ImageGalleryItem\"\n          key={id}\n          modalImage={largeImageURL}\n          onClick={()=>openModal={modalImage}}\n\n        >\n          <img\n            src={webformatURL}\n            alt=\"\"\n            className=\"ImageGalleryItem-image\"\n          ></img>\n        </li>\n      ))} */}\n\n      <div>\n        <li onClick={() => openModal(modalImage)} className=\"ImageGalleryItem\">\n          <img src={url} alt={alt} className=\"ImageGalleryItem-image\" />\n        </li>\n      </div>\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  modalImage: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nconst ImageGallery = ({ hits, openModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {/* <ImageGalleryItem hits={hits} openModal={openModal}/> */}\n      {hits.map((el) => (\n        <ImageGalleryItem\n          key={el.id}\n          url={el.webformatURL}\n          alt={el.tags}\n          modalImage={el.largeImageURL}\n          openModal={openModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n    hits: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    openModal: PropTypes.func.isRequired,\n  };\n\nexport default ImageGallery\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  state = { inputValue: \"\" };\n\n  handleChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ fetchArticles }) => {\n  return (\n    <>\n      <button className=\"Button\" type=\"button\" onClick={fetchArticles}>\n        Load more\n      </button>\n    </>\n  );\n};\nButton.propTypes = {\n    fetchArticles: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Modal = ({ modalImage, closeModal }) => {\n  return (\n    <div onClick={closeModal} className=\"Overlay\">\n      <div className=\"Modal\">\n        <img src={modalImage} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  modalImage: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from \"axios\";\n\nconst apiKey = '18873778-f39304832de2102fcf5072037';\n\n\nconst fetchArticlesWithQuery = (searchQuery, page = 1) => {\n  return axios\n    // .get(`https://hn.algolia.com/api/v1/search?query=${searchQuery}&page=${page}&hitsPerPage=5`)\n    .get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=15&key=${apiKey}`)\n    .then((responce) => responce.data.hits);\n};\nexport default { fetchArticlesWithQuery };\n","import React, { Component } from \"react\";\n// import axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport Notification from \"./Notification\";\n// import ImageGalleryItem from \"./ImageGalleryItem\";\nimport ImageGallery from \"./ImageGallery\";\nimport Searchbar from \"./Searchbar\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport imageApi from \"../services/imageApi\";\n\nexport default class App extends Component {\n  state = {\n    hits: [],\n    loading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    isModalOpen: false,\n  };\n\nopenModal = modalImage => {\n  this.setState({ isModalOpen: true, modalImage });\n  window.addEventListener('keydown', this.closeModal);\n};\n\ncloseModal = evt => {\n  if (evt.target === evt.currentTarget || evt.keyCode === 27)\n    this.setState({ isModalOpen: false });\n  window.removeEventListener('keydown', this.closeModal);\n};\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchArticles();\n    }\n  }\n\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  fetchArticles = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    imageApi\n      .fetchArticlesWithQuery(searchQuery, page)\n      .then((hits) => {\n        this.setState((prevState) => ({\n          hits: [...prevState.hits, ...hits],\n          page: prevState.page + 1,\n        }));\n        this.scroll();\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearchFormSubmit = (query) => {\n    this.setState({ searchQuery: query, page: 1, hits: [] });\n  };\n\n  \n  render() {\n    const { hits, loading, error, isModalOpen, modalImage } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\n        {error && (\n          <Notification\n            message={`Whoops, something went wrong: ${error.message}`}\n          />\n        )}\n        {hits.length > 0 && <ImageGallery hits={hits} openModal={this.openModal}/>}\n        {loading && <Spinner message=\"Loading...\" />}\n        {hits.length > 0 && !loading && (\n          <Button fetchArticles={this.fetchArticles} />\n        )}\n        {isModalOpen && (\n          <Modal modalImage={modalImage} closeModal={this.closeModal}/>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport './styles.css'\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}